---
downloads: ~/.ansible-downloads/
mount_path: /Volumes
homebrew_prefix: "{{ (ansible_machine == 'arm64') | ternary('/opt/homebrew', '/usr/local') }}"

# set to yes to run certain tasks
configure_aws: yes
configure_chef: no
configure_dotfiles: yes
configure_helm: yes
configure_krew: yes
configure_sudoers: no
configure_terminal: yes
configure_osx: yes
configure_vim: yes
configure_vscode: yes

dotfiles_repo: "git@github.com:chrisminton/dotfiles.git"
dotfiles_repo_accept_hostkey: yes
dotfiles_repo_local_destination: ~/personal/dotfiles
dotfiles_files:
  - .aws/cli/alias
  - .aws/config
  - .config/alacritty
  - .config/ghostty
  - .config/git
  - .config/k9s
  - .config/kitty
  - .config/nvim
  - .config/powerline
  - .config/starship.toml
  - .gitignore
  - .gnupg/gpg-agent.conf
  - .osx
  - .p10k.zsh
  - .ssh/config
  - .tmux.conf
  - .vimrc
  - .zshrc

homebrew_installed_packages:
  - autoconf
  - awscli
  - aws-shell
  - Azure/kubelogin/kubelogin
  - azure-cli
  - bash
  - bash-completion
  - coreutils
  - curl
  - derailed/k9s/k9s
  - direnv
  - dive
  - docutils
  - eks-node-viewer
  - fluxcd/tap/flux
  - fzf
  - gh
  - git
  - git-duet
  - gnu-tar
  - go
  - gpg
  - grep
  - harfbuzz
  - helm
  - helm-docs
  - httpie
  - iperf
  - jq
  - kind
  - krew
  - kubectx
  - kubernetes-cli
  - kubeval
  - kustomize
  - libevent
  - mcrypt
  - minikube
  - nmap
  - node
  - nvm
  - nvim
  - openssl
  - hashicorp/tap/packer
  - parallel
  - pinentry-mac # for GPG signing git commits
  - poetry
  - rbenv
  - romkatv/powerlevel10k/powerlevel10k
  - pre-commit
  - python3
  - readline
  - reattach-to-user-namespace
  - rsync
  - shellcheck
  - skopeo
  - sops
  - sqlite
  - ssh-copy-id
  - starship
  - stern
  - tanka
  - terraform-docs
  - terraform-ls
  - tfenv
  - tflint
  - tmux
  - tree
  - uv
  - watch
  - wget
  - wireshark
  - hashicorp/tap/vault
  - vim
  - virtualenv
  - xz
  - yamllint
  - yq

homebrew_taps:
  - git-duet/tap
  - hashicorp/tap
  - wagoodman/dive
  - wata727/tflint

homebrew_cask_appdir: /Applications
homebrew_cask_apps:
  - chef-workstation
  - docker
  - docker-desktop
  - firefox
  - font-hack-nerd-font
  - font-meslo-for-powerline
  - font-meslo-lg-nerd-font
  - ghostty
  - gpg-suite
  - headlamp
  - keybase
  - kubecontext
  #  - keypassxc # KeyPass Mac port
  - rectangle
  - signal
  - slack
  - tuple
  - visual-studio-code
  - zed
#  - whatsapp

# See `geerlingguy.mas` role documentation for usage instructions.
mas_installed_apps: []
mas_email: ""
mas_password: ""

osx_script: "~/.osx --no-restart"

# Install packages from other package managers.
# Note: You are responsible for making sure the required package managers are
# installed, eg. through homebrew.
composer_packages:
  []
  # - name: drush
  #   state: present # present/absent, default: present
  #   version: "^8.1" # default: N/A
gem_packages:
  []
  # - name: bundler
  #   state: present # present/absent/latest, default: present
  #   version: "~> 1.15.1" # default: N/A
npm_packages:
  # - name: webpack
  #   state: present # present/absent/latest, default: present
  #   version: "^2.6" # default: N/A
  - name: aws-azure-login
    state: present
pip_packages:
  # - name: mkdocs
  #   state: present # present/absent/latest, default: present
  #   version: "0.16.3" # default: N/A
  # - name: aws-shell
  #   executable: "{{ homebrew_prefix }}/bin/pip3"
  # - name: boto3
  #   executable: "{{ homebrew_prefix }}/bin/pip3"
  # - name: netifaces  # for powerline status internal IP
  #   executable: "{{ homebrew_prefix }}/bin/pip3"
  # - name: powerline-status
  #   executable: "{{ homebrew_prefix }}/bin/pip3"

# Chef
chefdk_version: 4.13.3

#Â AWS files to copy
aws_configs:
  - credentials
  - cli/ssh_all.scpt

# Helm plugins
helm_util: "{{ homebrew_prefix }}/bin/helm"
helm_plugins:
  - name: s3
    path: https://github.com/hypnoglow/helm-s3
  - name: release
    path: https://github.com/sstarcher/helm-release

# K8s
kubectl_util: "{{ homebrew_prefix }}/bin/kubectl"
krew_plugins:
  - cert-manager
  - neat
  - rbac-lookup
  - rolesum

# vim setup
vim_plugin_dir: ~/.vim/autoload

# vscode setup
vscode_util: "{{ homebrew_prefix }}/bin/code"
vscode_extensions:
  - bibhasdn.unique-lines
  - charliermarsh.ruff
  - chef-software.chef
  - davidanson.vscode-markdownlint
  - eamodio.gitlens
  - eriklynd.json-tools
  - github.copilot
  - github.copilot-chat
  - golang.go
  - grafana.vscode-jsonnet
  - jmmeessen.jenkins-declarative-support
  - johnpapa.vscode-peacock
  - hashicorp.hcl
  - hashicorp.terraform
  - karigari.chat
  - lostintangent.vsls-pomodoro
  - ms-azuretools.vscode-azureterraform
  - ms-azuretools.vscode-docker
  - ms-kubernetes-tools.vscode-kubernetes-tools
  - ms-python.python
  - ms-python.vscode-pylance
  - ms-vsliveshare.vslives
  - redhat.vscode-yaml
  - rust-lang.rust-analyzer
  - shopify.ruby-extensions-pack
  - shopify.ruby-lsp
  - sorbet.sorbet-vscode-extension
  - timonwong.shellcheck
  - tuxtina.json2yaml
  - weaveworks.vscode-gitops-tools

zsh_user_plugins:
  - zsh-autosuggestions
  - zsh-completions
  - zsh-syntax-highlighting

# Glob pattern to ansible task files to run after all other tasks are finished.
post_provision_tasks: []
